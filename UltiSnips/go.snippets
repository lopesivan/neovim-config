# go.snippets - Snippets for go file type
# {{{ Global:
global !p
import px.snippets
endglobal

# Load Library px.snippets }}}
# {{{ Global: Define JUMPFUNCTIONS:
global !p
# This function will jump to next placeholder when first is empty.
def jump_to_second_when_first_is_empty(snip):
    if px.snippets.get_jumper_position(snip) == 1:
        if not px.snippets.get_jumper_text(snip):
            px.snippets.advance_jumper(snip)

# This function will clean up first placeholder when this is empty.
def clean_first_placeholder(snip):
    # Jumper is a helper for performing jumps in UltiSnips.
    px.snippets.make_jumper(snip)

    if snip.tabstop == 2 and not px.snippets.get_jumper_text(snip):
        line = snip.buffer[snip.cursor[0]]
        snip.buffer[snip.cursor[0]] = \
            line[:snip.tabstops[1].start[1]-2] + \
            line[snip.tabstops[1].end[1]+1:]
        snip.cursor.set(
            snip.cursor[0],
            snip.cursor[1] - 3,
        )

endglobal

# jump_to_second_when_first_is_empty, clean_first_placeholder(snip) }}}

# {{{ SNIPPET: _skel
snippet _skeleton "Skeleton" b
package main

import "fmt"

func main() {
  fmt.Println("Hello World!")
}
$0
endsnippet
########################################################################## }}}
# {{{ SNIPPET: x \o/
context "px.snippets.make_context(snip)"
post_jump "clean_first_placeholder(snip)"
snippet x "Description" b
`!p jump_to_second_when_first_is_empty(snip)
`func (${1:blah}) $2() {
    $3
}
endsnippet
#
# USO:
# ----
#
# => digito: `x'
# => aciono a expansão: `<c-a>'
# func (blah) () {
#
# }
# => digito: `algum valor'
# => vou para o próximo campo: `<c-j>'
# => digito: `funName'
# => vou para o próximo campo: `<c-j>'
# => digito: `Estou aqui'
# => vou para o próximo campo: `<c-j>'
# => fim do snippet
# func (algum valor) funName() {
#     Estou aqui!
# }
# ---
# => digito: `x'
# => digito: `algum valor'
# => aciono a expansão: `<c-a>'
# func (blah) () {
#
# }
#
# => digito: `<BS>'
# => digito: `funçãoX'
# => vou para o próximo campo: `<c-j>'
# => digito: `Estou aqui'
# => vou para o próximo campo: `<c-j>'
# => fim do snippet
#func funçãoX() {
#     Estou aqui!
#}


########################################################################## }}}


# {{{ SNIPPET: y \o/
context "px.snippets.make_context(snip)"
post_jump "clean_first_placeholder(snip)"
snippet y "Description" b
`!p jump_to_second_when_first_is_empty(snip)
`func (${1:blah}) $2() {
    $3
}
endsnippet

########################################################################## }}}
