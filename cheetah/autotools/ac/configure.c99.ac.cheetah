#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
AC_INIT([${d.data.name}], [0.1], [<%= os.popen("git config --get user.email|sed -e 's/\s(at)\s/@/' -e 's/\s(dot)\s/./g'").read().strip() %>],
        [${d.data.package}], [<%= os.popen("git config --get user.site").read().strip() %>])

# Force autoconf to be at least this version number:# Force autoconf to be at least this version number:
AC_PREREQ([2.68])

# Safety check - list a source file that wouldn't be in other directories:
\#AC_CONFIG_SRCDIR([about.c])

# Put configuration results here, so we can easily \#include them:
\#AC_CONFIG_HEADERS([config.h])

# Put autotools auxiliary files in a subdir, so they don't clutter top dir:
AC_CONFIG_AUX_DIR([build-aux])

# The modern autotools convention is that you should use an "m4" subdirectory
# for internal "m4" files, instead of the default aclocal.m4.
AC_CONFIG_MACRO_DIR([m4])

# Enable "automake" to simplify creating makefiles:
AM_INIT_AUTOMAKE([1.11 -Wall -Werror])

# Checks for programs.
AC_PROG_CC
AM_PROG_AR
AM_PROG_CC_C_O
AC_PROG_CC_C99

# We use libraries
AC_PROG_RANLIB

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS([stdlib.h])

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.

AC_CONFIG_FILES([ Makefile
                  source/Makefile
                  examples/list/Makefile])

chave1 = ${d.data.chave1}
chave2 = ${d.data.chave2}
chave3 = ${d.data.chave3}

AC_OUTPUT

AC_MSG_RESULT(
[
--------------------------------------------------
<%= chr(36) %>{PACKAGE_NAME} Version <%= chr(36) %>{PACKAGE_VERSION}

 Prefix: '<%= chr(36) %>{prefix}'.
 Compiler: '<%= chr(36) %>{CC} <%= chr(36) %>{CFLAGS}'
 Libraries: '<%= chr(36) %>{LIBS}'

 Package features:
   Async Execution: <%= chr(36) %>{async_exec}

 Now type 'make @<:@<target>@:>@'
   where the optional <target> is:
     all                - build all binaries
     install            - install everything

--------------------------------------------------])
