#
# Fornecer uma interface para criação de famílias de objetos relacionados ou
# dependentes sem especificar suas classes concretas.
#

Family:                      # Família de tipos
- Family                     # Nome do tipo
- FamilyTypes:               # Nome da Família de tipos
    - Type1                  # primeiro tipo definido
    - Type2                  # segundo tipo definido
    - Type3                  # terceiro tipo definido

AbstractFactory:            # Classe *AbstractFactory* 
- AbstractFactory:          # Nome da Classe *AbstractFactory*
    - get                   # Método chamador
    - CreateProductA:       # Primeiro método abstrato de *AbstractFactory*
        - AbstractProductA: #
            - doIt
            - ProductA1
            - ProductA2
            - ProductA3
    - CreateProductB:       # Segundo método abstrato de *AbstractFactory*
        - AbstractProductB:
            - doTi
            - ProductB1
            - ProductB2
            - ProductB3
    - CreateProductC:       # Terceiro método abstrato de *AbstractFactory*
        - AbstractProductC:
            - doTI
            - ProductC1
            - ProductC2

ConcreteFactory:
- ConcreteFactory1          # Cria o Produto A1, B1 e C1
- ConcreteFactory2          # CriaçãoProduto A2, B2 e C2
- ConcreteFactory3          # CriaçãoProduto A3, B3 e C3

Client:
- Client                    # Nome do arquivo principal
